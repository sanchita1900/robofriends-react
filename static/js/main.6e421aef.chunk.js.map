{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchfield","searchChange","classname","type","placeholder","onChange","Scroll","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","React","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAbH,SAACC,GACT,IAAOC,EAAeD,EAAfC,KAAKC,EAAUF,EAAVE,MAAUF,EAAJG,GAClB,OACI,sBAAKC,UAAU,qDAAf,UACI,qBAAKC,IAAK,QAAQC,IAAG,+BAA0BL,EAA1B,cACrB,gCACI,6BAAKA,IACL,4BAAIC,WCOLK,EAZC,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACRC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACnC,OAAO,cAAC,EAAD,CAAcT,GAAIK,EAAOI,GAAGT,GAAIF,KAAMO,EAAOI,GAAGX,KAAMC,MAAOM,EAAOI,GAAGV,OAA7D,QAGrB,OACI,8BACKO,KCGEI,EAZG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC5B,OACI,qBAAKC,UAAU,MAAf,SACA,uBACAZ,UAAU,kCACVa,KAAK,SAASC,YAAY,gBAC1BC,SAAYJ,OCELK,EARD,SAACpB,GACX,OACI,qBAAKqB,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAO,SAAnE,SACKxB,EAAMyB,YCiBJC,E,kDAnBX,WAAY1B,GAAO,IAAD,8BACd,cAAMA,IACG2B,MAAM,CACPC,UAAW,GAHL,E,qDAMlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAU,CAACJ,UAAU,K,oBAE9B,WACI,OAAGG,KAAKJ,MAAMC,SAEN,6CAGDG,KAAK/B,MAAMyB,a,GAhBEQ,IAAMC,WC0CnBC,G,wDApCX,aAAc,IAAD,8BACT,gBAgBJC,eAAe,SAACC,GACZ,EAAKL,SAAS,CAAClB,YAAauB,EAAMC,OAAOC,SAhBzC,EAAKZ,MAAQ,CACTnB,OAAQ,GACRM,YAAa,IAJR,E,qDAOb,WAAoB,IAAD,OACf0B,MAAM,8CACLC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACF,EAAKZ,SAAS,CAACxB,OAAOoC,S,oBAO9B,WAAS,IAAD,OACEC,EAAiBd,KAAKJ,MAAMnB,OAAOsC,QAAO,SAAAtC,GAAM,OAAIA,EAAOP,KAAK8C,cAAcC,SAAS,EAAKrB,MAAMb,YAAYiC,kBACxH,OACI,sBAAK3C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcgB,KAAKK,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU5B,OAAQqC,e,GA7BnBZ,IAAMC,YCKVe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6e421aef.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card =(props) =>{\r\n    const {name,email,id}=props;\r\n    return(\r\n        <div className='tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt ='robot' src={`https://robohash.org/${name}?150x150`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList= ({robots}) => {\r\n    const cardComponent = robots.map((user,i) => {\r\n        return <Card key='i' id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n    }\r\n    )\r\n    return(\r\n        <div>\r\n            {cardComponent}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield,searchChange}) => {\r\n    return(\r\n        <div classname='pa2'>\r\n        <input\r\n        className='pa3 ba b--blue bg-lightest-blue'\r\n        type='search' placeholder='search robots'\r\n        onChange = {searchChange}\r\n        />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll =(props) =>{\r\n    return (\r\n        <div style={{overflow: 'scroll' ,border: '5px solid black', height:'800px' }}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n            this.state={\r\n                hasError : false,\r\n            }\r\n    }\r\n    componentDidCatch(error,info){\r\n        this.setState=({hasError: true});\r\n    }\r\n    render(){\r\n        if(this.state.hasError){\r\n            return (\r\n                <h1>Error !!!!!</h1>\r\n            )\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\n\r\nclass  App extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response =>{\r\n            return response.json();\r\n        })\r\n        .then(users => {\r\n            this.setState({robots:users})\r\n        })\r\n\r\n    }\r\n    onSearchChange=(event) => {\r\n        this.setState({searchfield: event.target.value});\r\n    }\r\n    render(){\r\n        const filteredRobots = this.state.robots.filter(robots => robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase()))\r\n    return(\r\n        <div className='tc'>\r\n            <h1 className=\"f2\">RoboFriends</h1>\r\n            <SearchBox searchChange={this.onSearchChange}/>\r\n            <Scroll>\r\n                <ErrorBoundary>\r\n                    <CardList robots={filteredRobots}/>\r\n                </ErrorBoundary>\r\n            </Scroll>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}